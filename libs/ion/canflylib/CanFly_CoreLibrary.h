//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------

#ifndef _CANFLY_CORELIBRARY_H_
#define _CANFLY_CORELIBRARY_H_

#include <nanoCLR_Interop.h>
#include <nanoCLR_Runtime.h>
#include <nanoPackStruct.h>

typedef enum __nfpack DataType
{
    DataType_NoData = 0,
    DataType_Error = 1,
    DataType_Float = 2,
    DataType_Int32 = 3,
    DataType_UInt32 = 4,
    DataType_Short = 6,
    DataType_UShort = 7,
    DataType_Char = 9,
    DataType_UChar = 10,
    DataType_Short2 = 12,
    DataType_UShort2 = 13,
    DataType_Char4 = 15,
    DataType_UChar4 = 16,
    DataType_Char2 = 18,
    DataType_UChar2 = 19,
    DataType_Char3 = 26,
    DataType_UChar3 = 27,
    DataType_ReservedBegin = 32,
    DataType_ReservedEnd = 99,
    DataType_UserDefinedBegin = 100,
    DataType_UserDefinedEnd = 255,
} DataType;

typedef enum __nfpack Flags
{
    Flags_Reply = 1,
    Flags_Loopback = 2,
    Flags_Broadcast = 4,
} Flags;

typedef enum __nfpack FieldType
{
    FieldType_field_none = 0,
    FieldType_field_key = 1,
    FieldType_field_bool = 2,
    FieldType_field_int16 = 3,
    FieldType_field_uint16 = 4,
    FieldType_field_int32 = 5,
    FieldType_field_uint32 = 6,
    FieldType_field_float = 7,
    FieldType_field_xyz = 8,
    FieldType_field_matrix = 9,
    FieldType_field_string = 10,
    FieldType_field_qtn = 11,
    FieldType_field_lla = 12,
    FieldType_field_stream = 13,
} FieldType;

typedef enum __nfpack PenStyle
{
    PenStyle_Solid = 0,
    PenStyle_Dash = 1,
    PenStyle_Dot = 2,
    PenStyle_DashDot = 3,
    PenStyle_DashDotDot = 4,
    PenStyle_Null = 5,
} PenStyle;

typedef enum __nfpack TextOutStyle
{
    TextOutStyle_Clipped = 2,
    TextOutStyle_Opaque = 4,
} TextOutStyle;

struct Library_CanFly_CoreLibrary_CanFly_Handle
{
    static const int FIELD____opaque = 1;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_CanFlyMsg
{
    static const int FIELD___flags = 1;
    static const int FIELD___data0 = 2;
    static const int FIELD___data1 = 3;
    static const int FIELD___data2 = 4;
    static const int FIELD___data3 = 5;
    static const int FIELD___data4 = 6;
    static const int FIELD___data5 = 7;
    static const int FIELD___data6 = 8;
    static const int FIELD___data7 = 9;

    NANOCLR_NATIVE_DECLARE(ToString___STRING);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U2__BOOLEAN);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U4);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__I4);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U2);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__I2);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U2__U2);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__I2__I2);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__R4);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__CHAR);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U1__U1);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__CHAR__CHAR);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U1__U1__U1);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__CHAR__CHAR__CHAR);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U1__U1__U1__U1);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__CHAR__CHAR__CHAR__CHAR);
    NANOCLR_NATIVE_DECLARE(_ctor___VOID__U2__U1);
    NANOCLR_NATIVE_DECLARE(get_Length___U1);
    NANOCLR_NATIVE_DECLARE(SetFlags___VOID__U2);
    NANOCLR_NATIVE_DECLARE(GetFlags___U2);
    NANOCLR_NATIVE_DECLARE(get_Id___U2);
    NANOCLR_NATIVE_DECLARE(get_NodeId___U1);
    NANOCLR_NATIVE_DECLARE(set_NodeId___VOID__U1);
    NANOCLR_NATIVE_DECLARE(GetDataType___U2);
    NANOCLR_NATIVE_DECLARE(get_ServiceCode___U1);
    NANOCLR_NATIVE_DECLARE(set_ServiceCode___VOID__U1);
    NANOCLR_NATIVE_DECLARE(get_MessageCode___U1);
    NANOCLR_NATIVE_DECLARE(set_MessageCode___VOID__U1);
    NANOCLR_NATIVE_DECLARE(GetFloat___R4);
    NANOCLR_NATIVE_DECLARE(GetInt32___I4);
    NANOCLR_NATIVE_DECLARE(GetUInt32___U4);
    NANOCLR_NATIVE_DECLARE(GetInt16___I2);
    NANOCLR_NATIVE_DECLARE(GetUInt16___U2);
    NANOCLR_NATIVE_DECLARE(GetInt8___I1);
    NANOCLR_NATIVE_DECLARE(GetUInt8___U1);
    NANOCLR_NATIVE_DECLARE(GetInt16Array___SZARRAY_I2);
    NANOCLR_NATIVE_DECLARE(GetUInt16Array___SZARRAY_U2);
    NANOCLR_NATIVE_DECLARE(GetInt8Array___SZARRAY_I1);
    NANOCLR_NATIVE_DECLARE(GetUInt8Array___SZARRAY_U1);

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Bitmap
{
    static const int FIELD___bitmapWidth = 1;
    static const int FIELD___bitmapHeight = 2;
    static const int FIELD___pixels = 3;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_CanFlyID
{
    static const int FIELD_STATIC__id_unused = 0;
    static const int FIELD_STATIC__id_pitch_acceleration = 1;
    static const int FIELD_STATIC__id_roll_acceleration = 2;
    static const int FIELD_STATIC__id_yaw_acceleration = 3;
    static const int FIELD_STATIC__id_pitch_rate = 4;
    static const int FIELD_STATIC__id_roll_rate = 5;
    static const int FIELD_STATIC__id_yaw_rate = 6;
    static const int FIELD_STATIC__id_roll_angle_magnetic = 7;
    static const int FIELD_STATIC__id_pitch_angle_magnetic = 8;
    static const int FIELD_STATIC__id_yaw_angle_magnetic = 9;
    static const int FIELD_STATIC__id_pitch_angle = 10;
    static const int FIELD_STATIC__id_roll_angle = 11;
    static const int FIELD_STATIC__id_yaw_angle = 12;
    static const int FIELD_STATIC__id_altitude_rate = 13;
    static const int FIELD_STATIC__id_indicated_airspeed = 14;
    static const int FIELD_STATIC__id_true_airspeed = 15;
    static const int FIELD_STATIC__id_calibrated_airspeed = 16;
    static const int FIELD_STATIC__id_angle_of_attack = 17;
    static const int FIELD_STATIC__id_qnh = 18;
    static const int FIELD_STATIC__id_baro_corrected_altitude = 19;
    static const int FIELD_STATIC__id_heading_angle = 20;
    static const int FIELD_STATIC__id_heading = 21;
    static const int FIELD_STATIC__id_pressure_altitude = 22;
    static const int FIELD_STATIC__id_outside_air_temperature = 23;
    static const int FIELD_STATIC__id_differential_pressure = 24;
    static const int FIELD_STATIC__id_static_pressure = 25;
    static const int FIELD_STATIC__id_wind_speed = 26;
    static const int FIELD_STATIC__id_wind_direction = 27;
    static const int FIELD_STATIC__id_gps_latitude = 28;
    static const int FIELD_STATIC__id_gps_longitude = 29;
    static const int FIELD_STATIC__id_gps_height = 30;
    static const int FIELD_STATIC__id_gps_groundspeed = 31;
    static const int FIELD_STATIC__id_true_track = 32;
    static const int FIELD_STATIC__id_magnetic_track = 33;
    static const int FIELD_STATIC__id_magnetic_heading = 34;
    static const int FIELD_STATIC__id_position_latitude = 35;
    static const int FIELD_STATIC__id_position_longitude = 36;
    static const int FIELD_STATIC__id_position_altitude = 37;
    static const int FIELD_STATIC__id_velocity_x = 38;
    static const int FIELD_STATIC__id_velocity_y = 39;
    static const int FIELD_STATIC__id_velocity_z = 40;
    static const int FIELD_STATIC__id_imu_mag_x = 41;
    static const int FIELD_STATIC__id_imu_mag_y = 42;
    static const int FIELD_STATIC__id_imu_mag_z = 43;
    static const int FIELD_STATIC__id_imu_accel_x = 44;
    static const int FIELD_STATIC__id_imu_accel_y = 45;
    static const int FIELD_STATIC__id_imu_accel_z = 46;
    static const int FIELD_STATIC__id_imu_gyro_x = 47;
    static const int FIELD_STATIC__id_imu_gyro_y = 48;
    static const int FIELD_STATIC__id_imu_gyro_z = 49;
    static const int FIELD_STATIC__id_magnetic_variation = 50;
    static const int FIELD_STATIC__id_def_utc = 51;
    static const int FIELD_STATIC__id_def_date = 52;
    static const int FIELD_STATIC__id_qnh_up = 53;
    static const int FIELD_STATIC__id_qnh_dn = 54;
    static const int FIELD_STATIC__id_set_magnetic_variation = 55;
    static const int FIELD_STATIC__id_heading_up = 56;
    static const int FIELD_STATIC__id_heading_dn = 57;
    static const int FIELD_STATIC__id_stall_warning = 58;
    static const int FIELD_STATIC__id_total_time = 59;
    static const int FIELD_STATIC__id_air_time = 60;
    static const int FIELD_STATIC__id_tach_time = 61;
    static const int FIELD_STATIC__id_pitch = 62;
    static const int FIELD_STATIC__id_track = 63;
    static const int FIELD_STATIC__id_deviation = 64;
    static const int FIELD_STATIC__id_track_angle_error = 65;
    static const int FIELD_STATIC__id_estimated_time_to_next = 66;
    static const int FIELD_STATIC__id_estimated_time_of_arrival = 67;
    static const int FIELD_STATIC__id_estimated_enroute_time = 68;
    static const int FIELD_STATIC__id_waypoint_identifier_0_3 = 69;
    static const int FIELD_STATIC__id_waypoint_identifier_4_7 = 70;
    static const int FIELD_STATIC__id_waypoint_identifier_8_11 = 71;
    static const int FIELD_STATIC__id_waypoint_identifier_12_15 = 72;
    static const int FIELD_STATIC__id_waypoint_type_identifier = 73;
    static const int FIELD_STATIC__id_waypoint_latitude = 74;
    static const int FIELD_STATIC__id_waypoint_longitude = 75;
    static const int FIELD_STATIC__id_waypoint_minimum_altitude = 76;
    static const int FIELD_STATIC__id_waypoint_maximum_altitude = 77;
    static const int FIELD_STATIC__id_distance_to_next = 78;
    static const int FIELD_STATIC__id_distance_to_destination = 79;
    static const int FIELD_STATIC__id_selected_course = 80;
    static const int FIELD_STATIC__id_desired_track_angle = 81;
    static const int FIELD_STATIC__id_nav_command = 82;
    static const int FIELD_STATIC__id_nav_valid = 83;
    static const int FIELD_STATIC__id_gps_valid = 84;
    static const int FIELD_STATIC__id_imu_valid = 85;
    static const int FIELD_STATIC__id_edu_valid = 86;
    static const int FIELD_STATIC__id_aux_battery = 87;
    static const int FIELD_STATIC__id_trim_up = 88;
    static const int FIELD_STATIC__id_trim_dn = 89;
    static const int FIELD_STATIC__id_trim_left = 90;
    static const int FIELD_STATIC__id_trim_right = 91;
    static const int FIELD_STATIC__id_autopilot_engage = 92;
    static const int FIELD_STATIC__id_autopilot_set_max_roll = 93;
    static const int FIELD_STATIC__id_autopilot_set_vs_rate = 94;
    static const int FIELD_STATIC__id_waypoint_turn_heading = 95;
    static const int FIELD_STATIC__id_roll_servo_set_position = 96;
    static const int FIELD_STATIC__id_pitch_servo_set_postion = 97;
    static const int FIELD_STATIC__id_autopilot_power = 98;
    static const int FIELD_STATIC__id_autopilot_alt_mode = 99;
    static const int FIELD_STATIC__id_autopilot_vs_mode = 100;
    static const int FIELD_STATIC__id_autopilot_mode = 101;
    static const int FIELD_STATIC__id_autopilot_status = 102;
    static const int FIELD_STATIC__id_roll_servo_status = 103;
    static const int FIELD_STATIC__id_pitch_servo_status = 104;
    static const int FIELD_STATIC__id_autopilot_altitude = 105;
    static const int FIELD_STATIC__id_autopilot_vertical_speed = 106;
    static const int FIELD_STATIC__id_engine_rpm = 107;
    static const int FIELD_STATIC__id_engine_rpm_a = 108;
    static const int FIELD_STATIC__id_exhaust_gas_temperature1 = 109;
    static const int FIELD_STATIC__id_exhaust_gas_temperature2 = 110;
    static const int FIELD_STATIC__id_exhaust_gas_temperature3 = 111;
    static const int FIELD_STATIC__id_exhaust_gas_temperature4 = 112;
    static const int FIELD_STATIC__id_manifold_pressure = 113;
    static const int FIELD_STATIC__id_oil_pressure = 114;
    static const int FIELD_STATIC__id_oil_temperature = 115;
    static const int FIELD_STATIC__id_cylinder_head_temperature1 = 116;
    static const int FIELD_STATIC__id_cylinder_head_temperature2 = 117;
    static const int FIELD_STATIC__id_cylinder_head_temperature3 = 118;
    static const int FIELD_STATIC__id_cylinder_head_temperature4 = 119;
    static const int FIELD_STATIC__id_engine_rpm_b = 120;
    static const int FIELD_STATIC__id_manifold_pressure_b = 121;
    static const int FIELD_STATIC__id_fuel_pressure = 122;
    static const int FIELD_STATIC__id_dc_voltage = 123;
    static const int FIELD_STATIC__id_dc_current = 124;
    static const int FIELD_STATIC__id_fuel_flow_rate = 125;
    static const int FIELD_STATIC__id_fuel_consumed = 126;
    static const int FIELD_STATIC__id_edu_left_fuel_quantity = 127;
    static const int FIELD_STATIC__id_edu_right_fuel_quantity = 128;
    static const int FIELD_STATIC__id_timing_divergence = 129;
    static const int FIELD_STATIC__id_left_mag_rpm = 130;
    static const int FIELD_STATIC__id_right_mag_rpm = 131;
    static const int FIELD_STATIC__id_left_mag_adv = 132;
    static const int FIELD_STATIC__id_right_mag_adv = 133;
    static const int FIELD_STATIC__id_left_mag_map = 134;
    static const int FIELD_STATIC__id_right_mag_map = 135;
    static const int FIELD_STATIC__id_left_mag_volt = 136;
    static const int FIELD_STATIC__id_right_mag_volt = 137;
    static const int FIELD_STATIC__id_left_mag_temp = 138;
    static const int FIELD_STATIC__id_right_mag_temp = 139;
    static const int FIELD_STATIC__id_left_mag_coil1 = 140;
    static const int FIELD_STATIC__id_right_mag_coil1 = 141;
    static const int FIELD_STATIC__id_left_mag_coil2 = 142;
    static const int FIELD_STATIC__id_right_mag_coil2 = 143;
    static const int FIELD_STATIC__id_fuel_flow_rate_left = 144;
    static const int FIELD_STATIC__id_fuel_flow_rate_right = 145;
    static const int FIELD_STATIC__id_active_fuel_tank = 146;
    static const int FIELD_STATIC__id_left_fuel_quantity = 147;
    static const int FIELD_STATIC__id_right_fuel_quantity = 148;
    static const int FIELD_STATIC__id_pitot_temperature = 149;
    static const int FIELD_STATIC__id_pitot_heat_status = 150;
    static const int FIELD_STATIC__id_pitot_power_status = 151;
    static const int FIELD_STATIC__id_fdu_board_temperature = 152;
    static const int FIELD_STATIC__id_set_left_fuel_qty = 153;
    static const int FIELD_STATIC__id_set_right_fuel_qty = 154;
    static const int FIELD_STATIC__id_mixture_lever = 155;
    static const int FIELD_STATIC__id_injector_dwell = 156;
    static const int FIELD_STATIC__id_propeller_speed_lever = 157;
    static const int FIELD_STATIC__id_propeller_motor_current = 158;
    static const int FIELD_STATIC__id_propeller_low_speed = 159;
    static const int FIELD_STATIC__id_propeller_high_speed = 160;
    static const int FIELD_STATIC__id_set_route = 161;
    static const int FIELD_STATIC__id_set_route_segments = 162;
    static const int FIELD_STATIC__id_set_waypoint_identifier_0_3 = 163;
    static const int FIELD_STATIC__id_set_waypoint_identifier_4_7 = 164;
    static const int FIELD_STATIC__id_set_waypoint_identifier_8_11 = 165;
    static const int FIELD_STATIC__id_set_waypoint_identifier_12_15 = 166;
    static const int FIELD_STATIC__id_set_waypoint_type_identifier = 167;
    static const int FIELD_STATIC__id_set_waypoint_latitude = 168;
    static const int FIELD_STATIC__id_set_waypoint_longitude = 169;
    static const int FIELD_STATIC__id_set_waypoint_minimum_altitude = 170;
    static const int FIELD_STATIC__id_set_waypoint_maximum_altitude = 171;
    static const int FIELD_STATIC__id_navigation_mode = 172;
    static const int FIELD_STATIC__id_alternator_status = 173;
    static const int FIELD_STATIC__id_voltage_warning = 174;
    static const int FIELD_STATIC__id_panel_brightness = 175;
    static const int FIELD_STATIC__id_pitot_temperature_alarm = 176;
    static const int FIELD_STATIC__id_nav_msg = 177;
    static const int FIELD_STATIC__id_nav_appr = 178;
    static const int FIELD_STATIC__id_nav_ils = 179;
    static const int FIELD_STATIC__id_voltage_sense_1 = 180;
    static const int FIELD_STATIC__id_voltage_sense_2 = 181;
    static const int FIELD_STATIC__id_user_defined_start = 182;
    static const int FIELD_STATIC__id_user_defined_end = 183;
    static const int FIELD_STATIC__id_node_register = 184;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Extent
{
    static const int FIELD___dx = 1;
    static const int FIELD___dy = 2;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Point
{
    static const int FIELD___x = 1;
    static const int FIELD___y = 2;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Rect
{
    static const int FIELD___left = 1;
    static const int FIELD___top = 2;
    static const int FIELD___right = 3;
    static const int FIELD___bottom = 4;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Colors
{
    static const int FIELD_STATIC__White = 185;
    static const int FIELD_STATIC__Black = 186;
    static const int FIELD_STATIC__Gray = 187;
    static const int FIELD_STATIC__LightGray = 188;
    static const int FIELD_STATIC__DarkGray = 189;
    static const int FIELD_STATIC__Red = 190;
    static const int FIELD_STATIC__Pink = 191;
    static const int FIELD_STATIC__Blue = 192;
    static const int FIELD_STATIC__Green = 193;
    static const int FIELD_STATIC__LightGreen = 194;
    static const int FIELD_STATIC__Yellow = 195;
    static const int FIELD_STATIC__Magenta = 196;
    static const int FIELD_STATIC__Cyan = 197;
    static const int FIELD_STATIC__PaleYellow = 198;
    static const int FIELD_STATIC__LightYellow = 199;
    static const int FIELD_STATIC__LimeGreen = 200;
    static const int FIELD_STATIC__Teal = 201;
    static const int FIELD_STATIC__DarkGreen = 202;
    static const int FIELD_STATIC__Maroon = 203;
    static const int FIELD_STATIC__Purple = 204;
    static const int FIELD_STATIC__Orange = 205;
    static const int FIELD_STATIC__Khaki = 206;
    static const int FIELD_STATIC__Olive = 207;
    static const int FIELD_STATIC__Brown = 208;
    static const int FIELD_STATIC__Navy = 209;
    static const int FIELD_STATIC__LightBlue = 210;
    static const int FIELD_STATIC__FadedBlue = 211;
    static const int FIELD_STATIC__LightGrey = 212;
    static const int FIELD_STATIC__DarkGrey = 213;
    static const int FIELD_STATIC__Hollow = 214;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Font
{
    static const int FIELD___hndl = 1;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Pen
{
    static const int FIELD___color = 1;
    static const int FIELD___width = 2;
    static const int FIELD___style = 3;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_GdiObject
{
    static const int FIELD___hndl = 1;
    static const int FIELD___clip_rect = 2;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_LLA
{
    static const int FIELD___lat = 1;
    static const int FIELD___lng = 2;
    static const int FIELD___alt = 3;

    NANOCLR_NATIVE_DECLARE(_ctor___VOID__R4__R4__R4);
    NANOCLR_NATIVE_DECLARE(get_Lat___R4);
    NANOCLR_NATIVE_DECLARE(set_Lat___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Lng___R4);
    NANOCLR_NATIVE_DECLARE(set_Lng___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Alt___R4);
    NANOCLR_NATIVE_DECLARE(set_Alt___VOID__R4);

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Matrix
{
    static const int FIELD___v00 = 1;
    static const int FIELD___v01 = 2;
    static const int FIELD___v02 = 3;
    static const int FIELD___v10 = 4;
    static const int FIELD___v11 = 5;
    static const int FIELD___v12 = 6;
    static const int FIELD___v20 = 7;
    static const int FIELD___c21 = 8;
    static const int FIELD___v22 = 9;

    NANOCLR_NATIVE_DECLARE(_ctor___VOID);
    NANOCLR_NATIVE_DECLARE(get_Item___R4__I4__I4);
    NANOCLR_NATIVE_DECLARE(set_Item___VOID__I4__I4__R4);
    NANOCLR_NATIVE_DECLARE(Dot___CanFlyXYZ__CanFlyXYZ);
    NANOCLR_NATIVE_DECLARE(Transpose___CanFlyMatrix);
    NANOCLR_NATIVE_DECLARE(op_Addition___STATIC__CanFlyMatrix__CanFlyMatrix__CanFlyMatrix);
    NANOCLR_NATIVE_DECLARE(op_Subtraction___STATIC__CanFlyMatrix__CanFlyMatrix__CanFlyMatrix);
    NANOCLR_NATIVE_DECLARE(op_Multiply___STATIC__CanFlyMatrix__CanFlyMatrix__CanFlyMatrix);
    NANOCLR_NATIVE_DECLARE(op_ExclusiveOr___STATIC__CanFlyMatrix__CanFlyMatrix__CanFlyMatrix);
    NANOCLR_NATIVE_DECLARE(op_Division___STATIC__CanFlyMatrix__CanFlyMatrix__CanFlyMatrix);

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Neutron
{
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt16___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I2__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt16_2___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I2__I2__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgUint16___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U2__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgUint16_2___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U2__U2__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt32___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I4__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt32_2___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I4__I4__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsguint___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U4__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsguint_2___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U4__U4__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgFloat___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__R4__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt8___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt8_2___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U1__U1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt8_3___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U1__U1__U1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgInt8_4___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__U1__U1__U1__U1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgUint8___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgUint8_2___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I1__I1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgUint8_3___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I1__I1__I1__I1);
    NANOCLR_NATIVE_DECLARE(CreateCanMsgUint8_4___STATIC__CanFlyCanFlyMsg__CanFlyCanFlyID__I1__I1__I1__I1__I1);
    NANOCLR_NATIVE_DECLARE(GetParamFloat___STATIC__R4__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamInt8___STATIC__U1__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamInt8Array___STATIC__SZARRAY_U1__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamUint8___STATIC__I1__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamUint8Array___STATIC__SZARRAY_I1__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamInt16___STATIC__I2__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamInt16Array___STATIC__SZARRAY_I2__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamUint16___STATIC__U2__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamUint16Array___STATIC__SZARRAY_U2__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamInt32___STATIC__I4__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(GetParamuint___STATIC__U4__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(CanSend___STATIC__VOID__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(CanSendRaw___STATIC__VOID__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(CanSendRepy___STATIC__VOID__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(RegisterService___STATIC__VOID__I1__CanFlyMsgHookFn);
    NANOCLR_NATIVE_DECLARE(Subscribe___STATIC__U4__CanFlyMsgHookFn__SZARRAY_CanFlyCanFlyID);
    NANOCLR_NATIVE_DECLARE(UnSubscribe___STATIC__VOID__U4);
    NANOCLR_NATIVE_DECLARE(SemaphoreCreate___STATIC__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(SemaphoreClose___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(SemaphoreSignal___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(SemaphoreWait___STATIC__VOID__CanFlyHandle__U4);
    NANOCLR_NATIVE_DECLARE(RegCreateKey___STATIC__U4__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegOpenKey___STATIC__U4__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegEnumKey___STATIC__VOID__U4__BYREF_CanFlyFieldType__BYREF_U2__BYREF_SZARRAY_U1__BYREF_STRING__BYREF_U4);
    NANOCLR_NATIVE_DECLARE(RegDeleteKey___STATIC__VOID__U4);
    NANOCLR_NATIVE_DECLARE(RegDeleteValue___STATIC__VOID__U4__STRING);
    NANOCLR_NATIVE_DECLARE(ReqQueryKey___STATIC__VOID__U4__BYREF_CanFlyFieldType__BYREF_STRING__BYREF_U2__BYREF_U4);
    NANOCLR_NATIVE_DECLARE(RegQueryChild___STATIC__VOID__U4__STRING__BYREF_U4__BYREF_CanFlyFieldType__BYREF_U2);
    NANOCLR_NATIVE_DECLARE(RegRenameValue___STATIC__VOID__U4__STRING__STRING);
    NANOCLR_NATIVE_DECLARE(RegGetInt8___STATIC__I1__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetInt8___STATIC__VOID__U4__STRING__I1);
    NANOCLR_NATIVE_DECLARE(RegGetUint8___STATIC__U1__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetUint8___STATIC__VOID__U4__STRING__U1);
    NANOCLR_NATIVE_DECLARE(RegGetInt16___STATIC__I2__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetInt16___STATIC__VOID__U4__STRING__I2);
    NANOCLR_NATIVE_DECLARE(RegGetUint16___STATIC__U2__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetUint16___STATIC__VOID__U4__STRING__U2);
    NANOCLR_NATIVE_DECLARE(RegGetInt32___STATIC__I4__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetInt32___STATIC__VOID__U4__STRING__I4);
    NANOCLR_NATIVE_DECLARE(RegGetUint32___STATIC__U4__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetUint32___STATIC__VOID__U4__STRING__U4);
    NANOCLR_NATIVE_DECLARE(RegGetLLA___STATIC__CanFlyLLA__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetLLA___STATIC__VOID__U4__STRING__CanFlyLLA);
    NANOCLR_NATIVE_DECLARE(RegGetXYZ___STATIC__CanFlyXYZ__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetXYZ___STATIC__VOID__U4__STRING__CanFlyXYZ);
    NANOCLR_NATIVE_DECLARE(RegGetMatrix___STATIC__CanFlyMatrix__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetMatrix___STATIC__VOID__U4__STRING__CanFlyMatrix);
    NANOCLR_NATIVE_DECLARE(RegGetQTN___STATIC__CanFlyQTN__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetQTN___STATIC__VOID__U4__STRING__CanFlyQTN);
    NANOCLR_NATIVE_DECLARE(RegGetString___STATIC__STRING__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetString___STATIC__VOID__U4__STRING__STRING);
    NANOCLR_NATIVE_DECLARE(RegGetFloat___STATIC__R4__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetFloat___STATIC__VOID__U4__STRING__R4);
    NANOCLR_NATIVE_DECLARE(RegGetBool___STATIC__BOOLEAN__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegSetBool___STATIC__VOID__U4__STRING__BOOLEAN);
    NANOCLR_NATIVE_DECLARE(RegStreamOpen___STATIC__CanFlyHandle__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegStreamCreate___STATIC__CanFlyHandle__U4__STRING);
    NANOCLR_NATIVE_DECLARE(RegStreamClose___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(RegStreamDelete___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(RegStreamEof___STATIC__BOOLEAN__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(RegStreamRead___STATIC__SZARRAY_U1__CanFlyHandle__U2);
    NANOCLR_NATIVE_DECLARE(RegStreamWrite___STATIC__VOID__CanFlyHandle__SZARRAY_U1);
    NANOCLR_NATIVE_DECLARE(RegStreamGetPos___STATIC__U4__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(RegStreamSetPos___STATIC__VOID__CanFlyHandle__U4);
    NANOCLR_NATIVE_DECLARE(RegStreamLength___STATIC__U4__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(RegStreamTruncate___STATIC__VOID__CanFlyHandle__U4);
    NANOCLR_NATIVE_DECLARE(RegStreamCopy___STATIC__VOID__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(RegStreamPath___STATIC__STRING__CanFlyHandle__BOOLEAN);

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Photon
{
    NANOCLR_NATIVE_DECLARE(OpenScreen___STATIC__CanFlyHandle__U2__CanFlywndproc__U2);
    NANOCLR_NATIVE_DECLARE(CreateWindow___STATIC__CanFlyHandle__CanFlyHandle__CanFlyRect__CanFlywndproc__U2);
    NANOCLR_NATIVE_DECLARE(CreateChildWindow___STATIC__CanFlyHandle__CanFlyHandle__CanFlyRect__CanFlywndproc__U2);
    NANOCLR_NATIVE_DECLARE(CloseWindow___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetWindowRect___STATIC__CanFlyRect__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetWindowPos___STATIC__CanFlyRect__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(SetWindowPos___STATIC__VOID__CanFlyHandle__CanFlyRect);
    NANOCLR_NATIVE_DECLARE(GetWindowData___STATIC__OBJECT__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetParent___STATIC__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetWindowById___STATIC__CanFlyHandle__CanFlyHandle__U2);
    NANOCLR_NATIVE_DECLARE(GetFirstChild___STATIC__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetNextSibling___STATIC__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetPreviousSibling___STATIC__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(InsertBefore___STATIC__VOID__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(InsertAfter___STATIC__VOID__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetZOrder___STATIC__U1__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(SetZOrder___STATIC__VOID__CanFlyHandle__U1);
    NANOCLR_NATIVE_DECLARE(SetWindowData___STATIC__VOID__CanFlyHandle__OBJECT);
    NANOCLR_NATIVE_DECLARE(GetMessage___STATIC__BOOLEAN__CanFlyHandle__BYREF_CanFlyHandle__BYREF_CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(DispatchMessage___STATIC__VOID__CanFlyHandle__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(PostMessage___STATIC__VOID__CanFlyHandle__CanFlyCanFlyMsg__I4);
    NANOCLR_NATIVE_DECLARE(SendMessage___STATIC__VOID__CanFlyHandle__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(CallDefaultWindowProc___STATIC__BOOLEAN__CanFlyHandle__CanFlyCanFlyMsg);
    NANOCLR_NATIVE_DECLARE(CanvasClose___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(CreateRectCanvas___STATIC__CanFlyHandle__CanFlyExtent);
    NANOCLR_NATIVE_DECLARE(CreateBitmapCanvas___STATIC__CanFlyHandle__CanFlyBitmap);
    NANOCLR_NATIVE_DECLARE(CreatePngCanvas___STATIC__CanFlyHandle__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(LoadPng___STATIC__VOID__CanFlyHandle__CanFlyHandle__CanFlyPoint);
    NANOCLR_NATIVE_DECLARE(GetCanvasExtents___STATIC__CanFlyExtent__CanFlyHandle__BYREF_U2);
    NANOCLR_NATIVE_DECLARE(GetCanvasExtents___STATIC__CanFlyExtent__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(GetOrientation___STATIC__VOID__CanFlyHandle__BYREF_SZARRAY_U2);
    NANOCLR_NATIVE_DECLARE(SetOrientation___STATIC__VOID__CanFlyHandle__U2);
    NANOCLR_NATIVE_DECLARE(Polyline___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__SZARRAY_CanFlyPoint);
    NANOCLR_NATIVE_DECLARE(Ellipse___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__U4__CanFlyRect);
    NANOCLR_NATIVE_DECLARE(Polygon___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__U4__SZARRAY_CanFlyPoint);
    NANOCLR_NATIVE_DECLARE(PolyPolygon___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__U4__SZARRAY_CanFlyPoint);
    NANOCLR_NATIVE_DECLARE(Rectangle___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__U4__CanFlyRect);
    NANOCLR_NATIVE_DECLARE(RoundRect___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__U4__CanFlyRect__I4);
    NANOCLR_NATIVE_DECLARE(BitBlt___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyRect__CanFlyHandle__CanFlyRect__CanFlyPoint);
    NANOCLR_NATIVE_DECLARE(GetPixel___STATIC__U4__CanFlyHandle__CanFlyRect__CanFlyPoint);
    NANOCLR_NATIVE_DECLARE(SetPixel___STATIC__U4__CanFlyHandle__CanFlyRect__CanFlyPoint__U4);
    NANOCLR_NATIVE_DECLARE(Arc___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__CanFlyPoint__I4__I4__I4);
    NANOCLR_NATIVE_DECLARE(Pie___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyPen__U4__CanFlyPoint__I4__I4__I4__I4);
    NANOCLR_NATIVE_DECLARE(OpenFont___STATIC__CanFlyHandle__STRING__U2);
    NANOCLR_NATIVE_DECLARE(DrawText___STATIC__VOID__CanFlyHandle__CanFlyRect__CanFlyHandle__U4__U4__STRING__CanFlyPoint__CanFlyRect__CanFlyTextOutStyle);
    NANOCLR_NATIVE_DECLARE(TextExtent___STATIC__CanFlyExtent__CanFlyHandle__CanFlyHandle__STRING);
    NANOCLR_NATIVE_DECLARE(InvalidateRect___STATIC__VOID__CanFlyHandle__CanFlyRect);
    NANOCLR_NATIVE_DECLARE(IsValid___STATIC__BOOLEAN__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(BeginPaint___STATIC__VOID__CanFlyHandle);
    NANOCLR_NATIVE_DECLARE(EndPaint___STATIC__VOID__CanFlyHandle);

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_PhotonID
{
    static const int FIELD_STATIC__id_photon = 215;
    static const int FIELD_STATIC__id_paint = 216;
    static const int FIELD_STATIC__id_create = 217;
    static const int FIELD_STATIC__id_close = 218;
    static const int FIELD_STATIC__id_timer = 219;
    static const int FIELD_STATIC__id_key0 = 220;
    static const int FIELD_STATIC__id_key1 = 221;
    static const int FIELD_STATIC__id_key2 = 222;
    static const int FIELD_STATIC__id_key3 = 223;
    static const int FIELD_STATIC__id_key4 = 224;
    static const int FIELD_STATIC__id_decka = 225;
    static const int FIELD_STATIC__id_deckb = 226;
    static const int FIELD_STATIC__id_menu_up = 227;
    static const int FIELD_STATIC__id_menu_dn = 228;
    static const int FIELD_STATIC__id_menu_left = 229;
    static const int FIELD_STATIC__id_menu_right = 230;
    static const int FIELD_STATIC__id_menu_ok = 231;
    static const int FIELD_STATIC__id_menu_cancel = 232;
    static const int FIELD_STATIC__id_menu_select = 233;
    static const int FIELD_STATIC__id_buttonpress = 234;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_QTN
{
    static const int FIELD___q0 = 1;
    static const int FIELD___q1 = 2;
    static const int FIELD___q2 = 3;
    static const int FIELD___q3 = 4;

    NANOCLR_NATIVE_DECLARE(_ctor___VOID__R4__R4__R4__R4);
    NANOCLR_NATIVE_DECLARE(get_Q0___R4);
    NANOCLR_NATIVE_DECLARE(set_Q0___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Q1___R4);
    NANOCLR_NATIVE_DECLARE(set_Q1___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Q2___R4);
    NANOCLR_NATIVE_DECLARE(set_Q2___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Q3___R4);
    NANOCLR_NATIVE_DECLARE(set_Q3___VOID__R4);

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Stream
{
    static const int FIELD___handle = 1;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_Widget
{
    static const int FIELD_STATIC___screen = 235;
    static const int FIELD_STATIC__widgetLock = 236;

    static const int FIELD___eventHandlers = 3;

    //--//

};

struct Library_CanFly_CoreLibrary_CanFly_XYZ
{
    static const int FIELD___x = 1;
    static const int FIELD___y = 2;
    static const int FIELD___z = 3;

    NANOCLR_NATIVE_DECLARE(_ctor___VOID__R4__R4__R4);
    NANOCLR_NATIVE_DECLARE(get_X___R4);
    NANOCLR_NATIVE_DECLARE(set_X___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Y___R4);
    NANOCLR_NATIVE_DECLARE(set_Y___VOID__R4);
    NANOCLR_NATIVE_DECLARE(get_Z___R4);
    NANOCLR_NATIVE_DECLARE(set_Z___VOID__R4);

    //--//

};

extern const CLR_RT_NativeAssemblyData g_CLR_AssemblyNative_canflylib;

#endif  //_CANFLY_CORELIBRARY_H_

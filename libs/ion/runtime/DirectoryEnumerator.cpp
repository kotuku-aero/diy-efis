//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------

#include "CanFly_CoreLibrary.h"
#include "CanFly_CoreLibrary_CanFly_DirectoryEnumerator.h"

using namespace canflylib::CanFly_CoreLibrary;


HRESULT Library_CanFly_CoreLibrary_CanFly_DirectoryEnumerator::GetDirectoryEntry___STATIC__BOOLEAN__U4__BYREF_STRING__BYREF_STRING( CLR_RT_StackFrame& stack )
{
    NANOCLR_HEADER(); hr = S_OK;
    {

        unsigned int param0;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

         param1;
        UINT8 heapblock1[CLR_RT_HEAP_BLOCK_SIZE];
        NANOCLR_CHECK_HRESULT( Interop_Marshal__ByRef( stack, heapblock1, param1 ) );

         param2;
        UINT8 heapblock2[CLR_RT_HEAP_BLOCK_SIZE];
        NANOCLR_CHECK_HRESULT( Interop_Marshal__ByRef( stack, heapblock2, param2 ) );

        bool retValue = DirectoryEnumerator::GetDirectoryEntry( param0, param1, param2, hr );
        NANOCLR_CHECK_HRESULT( hr );
        SetResult_bool( stack, retValue );
    }
    NANOCLR_NOCLEANUP();
}

HRESULT Library_CanFly_CoreLibrary_CanFly_DirectoryEnumerator::RewindDirectoryEntry___STATIC__VOID__U4( CLR_RT_StackFrame& stack )
{
    NANOCLR_HEADER(); hr = S_OK;
    {

        unsigned int param0;
        NANOCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        DirectoryEnumerator::RewindDirectoryEntry( param0, hr );
        NANOCLR_CHECK_HRESULT( hr );

    }
    NANOCLR_NOCLEANUP();
}
